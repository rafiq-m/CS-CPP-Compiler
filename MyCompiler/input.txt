namespace ID{
	static class A 
	{
		int a = +3-3;
		int c = 2;
		int ac = a +c;
		obj[] a = new obj[2];
		bool a ;
		static public int[] a0 = { 1, 2, 3 , 4 };
		int a = 2;
		int b = 2;
		public static int[] a1 = new int[4]{ 2,3,4,5};
		static int[] a2 = new int[2];
		public int a3 = 4;
		public int a4 = 2;
		public int a5 = a3 + a4;
		Student[] student = new student[3]{ a , b , sa.add(sa), new student() }, student1 = new student[2] ;
		public static int[] hello(int a6, int a7, int[] a8, obj a9, obj[] a10)
		{
			a  = 2;
			a5 = a6 < 3;
			int i = 0;	
			int abcs = a +c-c;
			for(obj[] obj = new obj[2]{a,b}; a.fn()[2] >= a[a+b].fn(a,b) ; i++ , this.i++ , ++this.i , new student())
			{
				continue;
				break;
				if(a < b)
				{
					this.i++;
				}
				else if(a + b - c != 2)
				{
					int[] a = new int[2];
				}
				else 
				{
					int ab = a + b - c;
				}
			}
			return new student[2] { a, new student() };
		}
		class D
		{
			int a;
			obj[] a = new obj[2];
		}
		
	}
	static class B extends A
	{
		public static main(string[] args)
		{
			try
            		{
				int a = 2;
                		int b = 2 + 3;
            		}
            		catch(Exception e)
            		{
                		try
                		{
                    			while(a < b)
                    			{
                        			i++;
                        			this.i++;
                        			this.a.fn().a[2].fn(2, 3)[2] = a.bc();
                    			}
                		}
               			 catch(Exception e)
                		{
                  			 student[] s = new student[2], s1 = { s[1] };
               			}
            		}			
            		catch(Exception e)
           		{
            		    a.fn().a++;
       			}
            		finally
            		{
               			try
              			{ 
                    			int a= 2;
                		}
                		catch(Exception e)
                		{
                    			int b = 23;
                		}
          		}
		}
		
	}
	class C 
	{
		void samsung(int a) { }
		void add(int a , obj b){ }
		int subtract(int a, obj b) 
		{
			a = a - 1;
		}
	}
}


